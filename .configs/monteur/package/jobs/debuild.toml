[Metadata]
Name = 'Debuild'
Description = """
Package application into .deb package file using manual commands.
"""
Type = 'deb-manual'

[Variables]
ChangelogFrom = 'origin/staging'
ChangelogTo = 'origin/main'
GPGID = 'hello@zoralab.com'
GPGExistence = ''  # to be filled by [CMD]

[FMTVariables]




[[Dependencies]]
Name = 'DEB Builder'
Condition = 'all-all'
Type = 'command'
Command = 'debuild'

[[Dependencies]]
Name = 'GPG Tool'
Condition = 'all-all'
Type = 'command'
Command = 'gpg'

[[Dependencies]]
Name = 'Git for Changelog Generation'
Condition = 'all-all'
Type = 'command'
Command = 'git'




[Changelog]
LineBreak = "\n"
Regex = ''

[[Changelog.CMD]]
Name = "Fetch All Local Remote Branches To The Latest"
Type = 'command'
Condition = [ 'all-all' ]
Source = 'git fetch --all'

[[Changelog.CMD]]
Name = "Get Changelog Data from Git Log Between Branches"
Type = 'command'
Condition = [ 'all-all' ]
Source = """git --no-pager log \
"{{- .ChangelogTo -}}..{{- .ChangelogFrom -}}" \
--pretty="format:%h %s"
"""
Save = "ChangelogEntries"




[Packages.001]
OS = [ 'linux' ]
Arch = [ 'amd64' ]
Name = '{{- .App.ID -}}-{{- .App.Version -}}-{{- .PkgOS -}}-{{- .PkgArch -}}'
Changelog = '{{- .DataDir -}}/debian/changelog-{{- .PkgArch -}}'
Distribution = [
	'stable',
]
BuildSource = false

[Packages.001.Files]
'{{- .PackageDir -}}/monteur' = '{{- .BuildDir -}}/{{- .PkgOS -}}-{{- .PkgArch -}}'




[[CMD]]
Name = "Get GPG Secret Key for Verifications"
Type = 'command'
Condition = [ 'all-all' ]
Source = 'gpg --list-secret-keys "{{- .GPGID }}"'
Save = 'GPGExistence'

[[CMD]]
Name = "Verify GPG Secret Key Must Exists For Signing"
Type = 'is-not-empty'
Condition = [ 'all-all' ]
Source = '{{- .GPGExistence -}}'

[[CMD]]
Name = "Compile Deb Package with Debuild"
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .PackageDir -}}'
Source = 'debuild -b -k{{- .GPGID }} -a{{- index .PkgArch 0 }}'
