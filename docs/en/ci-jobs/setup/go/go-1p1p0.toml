# Information about the software to be downloaded
[Metadata]
Name = 'Go'
Description = """
Setup Go programming language for compiling Go source codes.
"""
Type = 'https-download'




# Customization
[Variables]
Version = '1.17.5'
BaseURL = 'https://golang.org/dl/'




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}{{- .Archive -}}'
Method = 'GET'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'

[Sources.darwin-amd64]
Archive = 'go{{- .Version -}}.darwin-amd64.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = '2db6a5d25815b56072465a2cacc8ed426c18f1d5fc26c1fc8c4f5a7188658264'

[Sources.darwin-arm64]
Archive = 'go{{- .Version -}}.darwin-arm64.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = '111f71166de0cb8089bb3e8f9f5b02d76e1bf1309256824d4062a47b0e5f98e0'

[Sources.linux-386]
Archive = 'go{{- .Version -}}.linux-386.{{- .Format -}}'
[Sources.linux-386.Checksum]
Value = '4f4914303bc18f24fd137a97e595735308f5ce81323c7224c12466fd763fc59f'

[Sources.linux-amd64]
Archive = 'go{{- .Version -}}.linux-amd64.{{- .Format -}}'
[Sources.linux-amd64.Checksum]
Value = 'bd78114b0d441b029c8fe0341f4910370925a4d270a6a590668840675b0c653e'

[Sources.linux-arm64]
Archive = 'go{{- .Version -}}.linux-arm64.{{- .Format -}}'
[Sources.linux-arm64.Checksum]
Value = '6f95ce3da40d9ce1355e48f31f4eb6508382415ca4d7413b1e7a3314e6430e7e'

[Sources.linux-armv6l]
Archive = 'go{{- .Version -}}.linux-armv6l.{{- .Format -}}'
[Sources.linux-armv6l.Checksum]
Value = 'aa1fb6c53b4fe72f159333362a10aca37ae938bde8adc9c6eaf2a8e87d1e47de'

[Sources.windows-386]
Format = 'zip'
Archive = 'go{{- .Version -}}.windows-386.{{- .Format -}}'
[Sources.windows-386.Checksum]
Value = '6d7b9948ee14a906b14f5cbebdfab63cd6828b0b618160847ecd3cc3470a26fe'

[Sources.windows-amd64]
Format = 'zip'
Archive = 'go{{- .Version -}}.windows-amd64.{{- .Format -}}'
[Sources.windows-amd64.Checksum]
Value = '671faf99cd5d81cd7e40936c0a94363c64d654faa0148d2af4bbc262555620b9'

[Sources.freebsd-386]
Archive = 'go{{- .Version -}}.freebsd-386.{{- .Format -}}'
[Sources.freebsd-386.Checksum]
Value = '443c1cd9768df02085014f1eb034ebc7dbe032ffc8a9bb9f2e6617d037eee23c'

[Sources.freebsd-amd64]
Archive = 'go{{- .Version -}}.freebsd-amd64.{{- .Format -}}'
[Sources.freebsd-amd64.Checksum]
Value = '17180bdc4126acffd0ebf86d66ef5cbc3488b6734e93374fb00eb09494e006d3'

[Sources.linux-ppc64le]
Archive = 'go{{- .Version -}}.linux-ppc64le.{{- .Format -}}'
[Sources.linux-ppc64le.Checksum]
Value = '3d4be616e568f0a02cb7f7769bcaafda4b0969ed0f9bb4277619930b96847e70'

[Sources.linux-s390x]
Archive = 'go{{- .Version -}}.linux-ppc64le.{{- .Format -}}'
[Sources.linux-s390x.Checksum]
Value = '8087d4fe991e82804e6485c26568c2e0ee0bfde00ceb9015dc86cb6bf84ef40b'

[Sources.windows-arm64]
Format = 'zip'
Archive = 'go{{- .Version -}}.windows-arm64.{{- .Format -}}'
[Sources.windows-arm64.Checksum]
Value = '45e88676b68e9cf364be469b5a27965397f4e339aa622c2f52c10433c56e5030'




# Setup the unpacked software directories/files into the local bin directory.
#
# NOTE: The key field is mainly for sorting purposes.
[[Setup]]
Name = 'Install Go Programming Language Entire Directory'
Type = 'move'
Condition = ['all-all']
Source = '{{- .WorkingDir -}}/go'
Target = '{{- .BinDir -}}/golang'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash
export LOCAL_BIN="${LOCAL_BIN:-{{- .BinDir -}}}"
export GOROOT="${LOCAL_BIN}/golang"
export GOPATH="${LOCAL_BIN}/gopath"
export GOBIN="${GOPATH}/bin"
export GOCACHE="${LOCAL_BIN}/gocache"
export GOENV="${LOCAL_BIN}/goenv"

stop_go() {
	PATH=:${PATH}:
	GOROOT="${GOROOT}/bin"
	PATH=${PATH//:$GOROOT:/:}
	PATH=${PATH//:$GOBIN:/:}
	PATH=${PATH//:$GOPATH:/:}
	PATH=${PATH%:}
	unset GOROOT GOPATH GOBIN GOCACHE GOENV
}

case $1 in
--stop)
	stop_go
	;;
*)
	export PATH="${PATH}:${GOROOT}/bin:${GOPATH}:${GOBIN}"

	if [ ! -z "$(type -p go)" ] && [ ! -z "$(type -p gofmt)" ]; then
		1>&2 printf "[ DONE  ] localized Go started.\\n"
	else
		1>&2 printf "[ ERROR ] localized Go failed to initalized.\\n"
		stop_go
	fi
	;;
esac
"""
